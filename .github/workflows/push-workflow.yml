name: Run Tests
run-name: ${{ github.actor }} pushed a change ðŸš€
on: [push]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        if: matrix.python != '3.11'
        uses: actions/checkout@v3
      - name: Checkout Full  # needed for pybugsai
        if: matrix.python == '3.11'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 0 means full depth
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Use Dev Environment Cache
        id: env-cache
        uses: actions/cache/restore@v3
        with:
          path: |
            .venv
            .tox
            .mypy_cache
          key: env-${{ matrix.python }}-${{ hashFiles('setup.py', 'requirements_*.txt') }}
          restore-keys: |
            env-${{ matrix.python }}-
      - name: Install Dev Environment
        id: install-dev
        if: steps.env-cache.outputs.cache-hit != 'true'
        run: |
          # it's not necessary to install the whole dev-environment to run tox.  However, this is a good check
          # that the dev-setup works in all python versions
          ./scripts/github_wrapper.sh ./scripts/setup_dev_env.sh
      - name: Run Tox
        id: tox
        run: |
          ./scripts/github_wrapper.sh ./scripts/tox_github.sh "${{ matrix.python }}"
        continue-on-error: true
      - name: Save Dev Environment Cache
        # we want this to save if the installation was successful, even if the tox run wasn't
        if: steps.env-cache.outputs.cache-hit != 'true' && steps.install-dev.outputs.result == 'success'
        uses: actions/cache/save@v3
        with:
          path: |
            .venv
            .tox
            .mypy_cache
          key: env-${{ matrix.python }}-${{ hashFiles('setup.py', 'requirements_*.txt') }}
      - name: Run PyBugsAI
        id: pybugsai
        if: matrix.python == '3.11'
        uses: ./.github/actions/pybugsai
        with:
          api-key: ${{ secrets.OPEN_AI_API_KEY }}
      - name: Result
        run: |
          # Check if tox run was a success and, if this is python3.11, that pybugsai run was a success
          [[ "${{ steps.tox.outputs.result }}" == success && (
            "${{ matrix.python }}" != '3.11' || "${{ steps.pybugsai.outputs.result }}" == success
          ) ]]

  results:
      if: ${{ always() }}
      runs-on: ubuntu-latest
      name: Final Results
      needs: [tests]
      steps:
          - run: |
              [[ "${{ needs.tests.result }}" == "success" ]]
