name: PyBugsAI
description: Runs PyBugsAI and Caches Its Data
runs:
  using: composite
  steps:
    - name: Get Python Files Hash
      id: py-files-hash
      shell: bash
      run: |
        # Using `hashFiles('**/*.py')` works but is insanely slow.  This does essentially the same
        echo "hash=$(git ls-files '*.py' | xargs md5 | md5)" >> "$GITHUB_OUTPUT"
    - name: Restore PyBugsAI Cache
      id: pybugsai-cache
      uses: actions/cache/restore@v3
      with:
        path: .pybugsai
        key: pybugsai-${{ steps.py-files-hash.outputs.hash }}-SUCCESS
        restore-keys: |
          pybugsai-${{ steps.py-files-hash.outputs.hash }}-
          pybugsai-
    - name: Run PyBugsAI
      id: pybugsai
      shell: bash
      run: |
        . ./scripts/venv_github.sh
        if ./scripts/pybugsai_github.sh; then
          echo cache-key-suffix=SUCCESS >> "$GITHUB_OUTPUT" 
        else
          echo cache-key-suffix="$(find .pybugsai/cache -type f | xargs md5 | md5)" >> "$GITHUB_OUTPUT"
        fi
        echo "result=success" >> "$GITHUB_OUTPUT"

      continue-on-error: true  # want to still save the cache before failing
    - name: Save PyBugsAI Cache
      if: steps.env-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: .pybugsai
        key: pybugsai-${{ steps.pybugsai-cache.outputs.hash }}-${{ steps.pybugsai.outputs.cache-key-suffix }}
    - name: Fail If PyBugsAI Failed
      shell: bash
      run: |
        [[ "${{ steps.pybugsai.outputs.result }}" == "success" ]]

